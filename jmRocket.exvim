-- Edit and save the file.
-- The variables will be loaded and exists as g:ex_{var} in Vim's runtime.
-- For example, "foo = true" will be "g:ex_foo", and the value is "true"

-- Choose your project type
-- Press <F5> to apply project_type for other settings
project_type = all -- { all, build, clang, data, doc, game, server, shell, web, ... }

-- Project Settings:
version = 13
project_name = 'jmRocket'

-- File And Folder Filters:
folder_filter_mode = exclude -- { include, exclude }
folder_filter += chisel3,firrtl,emulator,hardfloat,lib
folder_filter += macros,project,regression,riscv-tools,scripts,target,torture
folder_filter += verilator-*
folder_filter += generated-src,builds -- It seem exvim has some issue for reading generated code
file_filter += scala,cc,hh,c,h,v
file_filter += __EMPTY__,mk,md
file_ignore_pattern += *.o,*.d

-- Editing:
indent = 4
expand_tab = true -- { true, false }

-- Building:
builder = gulp -- { gulp, grunt, gcc, xcode, vs, unity3d, ... }
build_opt = ''

-- ex-project Options:
enable_project_browser = true -- { true, false }
project_browser = ex -- { ex, nerdtree }

-- ex-gsearch Options:
enable_gsearch = true -- { true, false }
gsearch_engine = idutils -- { idutils, grep }

-- ex-tags Options:
enable_tags = true -- { true, false }
enable_symbols = true -- { true, false }
enable_inherits = true -- { true, false }
enable_custom_tags = false -- { true, false }
custom_tags_file =

-- ex-cscope Options:
enable_cscope = true -- { true, false }

-- ex-macrohl Options:
enable_macrohl = true -- { true, false }

-- restore buffers:
enable_restore_bufs = false -- { true, false }

-- Project References:
-- sub_project_refs += foobar1.exvim -- example
-- sub_project_refs += foobar2.exvim -- example

